---
# tasks file for roles/aws_create_vpc

# This role performs the following:
# Creates a VPC
# Provisions the public/private subnets in the VPC
# Defines the Security Groups

- name: START Role aws_create_vpc
  debug:
    msg: "START execution of role/aws_create_vpc"
  environment:
    AWS_REGION: "{{ aws_region }}"

- name: Create VPC
  ec2_vpc_net:
    name: "{{ aws_vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ aws_region }}"
    tags:
      res_group_tag: "{{ res_group_tag }}"
  register: my_vpc

# Parse/Set the created VPC ID
- name: Set fact VPC ID
  set_fact:
    vpc_id: "{{ my_vpc.vpc.id }}"

# Create VPC Subnets
- name: Create VPC Subnets
  ec2_vpc_subnet:
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ item.value.cidr }}"
    az: "{{ item.value.az }}"
    tags:
      Name: "{{ item.key }}"
      res_group_tag: "{{ res_group_tag }}"
  with_dict: "{{ vpc_subnets }}"
  register: my_vpc_subnets

- name: DEBUG my_vpc_subnets
  debug:
    var: my_vpc_subnets
  when: DEBUGLVL > 0

# Loop my_vpc_subnet.results list, to Parse/Set the subnet details into the dict vpc_subnet_ids
- name: Set fact VPC subnet IDs
  set_fact:
    vpc_subnet_ids: "{{ vpc_subnet_ids | default({}) | combine({ item.subnet.tags.Name: item.subnet.id }) }}"
  loop: "{{ my_vpc_subnets.results }}"

- name: DEBUG vpc_subnet_ids
  debug:
    var: vpc_subnet_ids
  when: DEBUGLVL > 0

- name: DEBUG vpc_security_groups
  debug:
    var: vpc_security_groups
  when: DEBUGLVL > 0

# Create Security Groups
- name: Create Security Groups
  ec2_group:
    vpc_id: "{{ vpc_id }}"
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    rules: "{{ item.rules }}"
    tags:
      res_group_tag: "{{ res_group_tag }}"
  loop: "{{ vpc_security_groups }}"

# Create Internet Gateway
- name: Create internet gateway
  ec2_vpc_igw:
    vpc_id: "{{ vpc_id }}"
    tags:
      res_group_tag: "{{ res_group_tag }}"    
  register: my_igw

# Parse/Set Fact IGW ID
- name: "Set fact Internet Gateway ID"
  set_fact:
    vpc_igw_id: "{{ my_igw.gateway_id }}"

# Create Public Route Table for IGW, attach to the public subnets
- name: Create Route Table for public subnets
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    tags:
      Name: "{{ aws_vpc_name }}-public"
      res_group_tag: "{{ res_group_tag }}"
    subnets:
      - "{{ vpc_subnet_ids['public-az1'] }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ vpc_igw_id }}"