---
# tasks file for roles/aws_provision_ec2

# This role performs the following:
# - Creates/Saves a EC2 key pair
# - Creates a EC2 instance with CENTOS 7
# - Configures Security Group for http and ssh
# - Configures OS Firewall to deny ALL apart from http and ssh
# - Install Docker CE
# - Deploy and Start nginx container

- name: START Role aws_provision_ec2
  debug:
    msg: "START execution of role/aws_provision_ec2"
  environment:
    AWS_REGION: "{{ aws_region }}"

- name: Inject VPC facts
  include_tasks: "{{ playbook_dir }}/roles/aws_create_vpc/tasks/get_vpc_facts.yml"

# Creates/Saves a EC2 key pair
- name: Create EC2 key pair
  ec2_key:
    name: "{{ aws_vpc_key }}"
  register: my_aws_vpc_key

- name: DEBUG my_aws_vpc_key
  debug:
    var: my_aws_vpc_key
  when: DEBUGMODE

- name: Save EC2 private key pair
  copy:
    content: "{{ my_aws_vpc_key.key.private_key }}"
    dest: "{{ playbook_dir }}/aws-ec2-key.pem"
    mode: 0600
  when: my_aws_vpc_key.changed

# Creates a EC2 instance
- name: Creates a EC2 instance
  ec2:
    key_name: "{{ aws_vpc_key }}"
    instance_type: "{{ ec2.t2_micro_centos7.instance_type }}"
    image: "{{ ec2.t2_micro_centos7.ami }}"
    wait: yes
    wait_timeout: 500
    count: 1
    monitoring: yes
    vpc_subnet_id: "{{ my_vpc_subnet_ids['public-az1'] }}"
    group:
      - allow-all-ssh
      - allow-all-http    
    assign_public_ip: yes
    instance_tags:
      res_group_tag: "{{ res_group_tag }}"
      category: "webserver"
  register: my_ec2

- name: DEBUG my_ec2
  debug:
    var: my_ec2
  when: DEBUGMODE

# Waits for EC2 instance SSH to come up before continuing with the rest of provisioning
- name: Wait for EC2 instance SSH
  wait_for:
    host: "{{ my_ec2.instances[0].public_ip }}"
    port: 22
    delay: 15
    state: started

# Add EC2 host IP to the in-memory inventory under group EC2_instances
- name: Add EC2 host into inventory
  add_host:
    groups: ec2_nodes
    hostname: "{{ my_ec2.instances[0].public_ip }}"
    ansible_user: "{{ ec2.t2_micro_centos7.default_username }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/aws-ec2-key.pem"
    # ansible_become: yes
